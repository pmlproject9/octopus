apiVersion: v1
kind: Namespace
metadata:
  name: octopus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: octopus-agent
  namespace: octopus
  labels:
    {{- include "octopus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "octopus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "octopus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: octopus-agent
      securityContext: {}
      containers:
        - name: octopus-agent
          command: ["octopus-agent --clusterID={{.Values.octopus.clusterID}} --iptables-sync-period={{.Values.octopus.iptablesSyncPeriod}}"]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: octopus-sync
  namespace: octopus
  labels:
    {{- include "octopus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "octopus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "octopus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: octopus-sync
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: BROKER_K8S_APISERVER
              value: {{.Values.broker.server}}
            - name: BROKER_K8S_APISERVERTOKEN
              value: {{.Values.broker.token}}
            - name: BROKER_K8S_CA
              value: {{.Values.broker.ca}}
            - name: BROKER_K8S_INSECURE
              value: "false"
          command: ["service-syncer --clusterID={{.Values.octopus.clusterID}}"]
          securityContext: {}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:{}